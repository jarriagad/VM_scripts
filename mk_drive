#!/bin/bash

#This script creates a KVM image disk of n size and attaches it to any vm
#Set defaults (for now):
# default storage location /mnt/sdb/vm_store/default01
# default image format = raw

img_location=/mnt/sdb/vm_store/default01
vms_all=$( virsh list --all --name )

echo ""
echo -e "Welcome to the KVM img creator and mounting tool!"
echo -e "Disk will be created at /mnt/sdb/vm_store/default01 by default"
echo -e "Only enter integer for disk size (GB)" 
echo -e "Please follow the convention for img names: <vm attached to>-<purpose>-<size>\n"
read -p "Enter image size: " img_size
read -p "Enter image name: " img_name
read -p "Enter target VM name, or press "l" to list all VMs: " target_vm

# This loops through all VMs to make sure selected is real. It exits if no VM found
# Currently this loops marks everything as failed
# Trying to link to ./tools/matcher script to avoid spaghetti code

if [[ $target_vm = "l" ]]; then
	echo $vms_all
	read -p "Target VM: " target_vm
elif [[ $vms_all =~ "$target_vm" ]]; then 
	read -p "Create image? (y/n)"
else
	echo "Not a vm, goodbye" && exit
fi

# Sets confirmation variable and either runs command or shuts down script upon answer
if [[ $img_confirmation = "y" ]]; then
	echo "Creating image..."
	echo "qemu-img create -f raw "$img_location"/"$img_name" ${img_size}G" && 
	echo "Image $img_name has been sucessfuly created!" 
elif [[ $img_confirmation = "n" ]]; then
	exit 0
else
	printf "Option not available, goodbye"
	exit 0
fi

read -p "Would you like to attach $img_name to $target_vm? (y/n)" atch_confirmation

#This attaches the new volume to as a block device to selected vm
if [[ $atch_confirmation = y ]]; then
	read -p "enter target block target: " blk_name
	echo "Attaching $img_name to $target_vm..."
	echo "virsh attach-disk $target_vm "$img_location"/"$img_name" $blk_name --persistent" &&
	echo "Image $img_name has been sucsessfuly attached to $target_vm"
fi

